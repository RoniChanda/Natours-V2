import { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";

import InnerContainer from "../ui/InnerContainer";
import {
  useDisable2FAMutation,
  useEnable2FAMutation,
} from "../../redux/apis/authApi";
import SetupTwoFactorModal from "./SetupTwoFactorModal";
import { setAlert } from "../../redux/slices/userSlice";

export default function EnableTwoFactor() {
  const [modal, setModal] = useState(false);
  const { user } = useSelector((state) => state.user);
  const dispatch = useDispatch();
  const [
    enable2FA,
    { isLoading: enable2FALoading, error: enable2FAError, data: enable2FAData },
  ] = useEnable2FAMutation();
  const [
    disable2FA,
    {
      isLoading: disable2FALoading,
      error: disable2FAError,
      data: disable2FAData,
    },
  ] = useDisable2FAMutation();

  useEffect(() => {
    if (enable2FAData?.status === "SUCCESS") {
      setModal(true);
    }
  }, [enable2FAData]);

  const error = enable2FAError || disable2FAError;
  useEffect(() => {
    if (error) dispatch(setAlert({ type: "error", msg: error }));

    if (disable2FAData?.status === "SUCCESS")
      dispatch(
        setAlert({
          type: "success",
          msg: "Two-Factor authentication was disabled.",
        })
      );
  }, [dispatch, error, disable2FAData]);

  return (
    <InnerContainer
      className="user-view__form-container"
      heading="Two-Factor Authentication"
    >
      {modal && (
        <SetupTwoFactorModal
          qrCode={enable2FAData?.imageURL}
          secret={enable2FAData?.secret}
          onCancel={() => setModal(false)}
          setModal={setModal}
        />
      )}
      <p className="title__description">
        Protect your account with an extra layer of security by requiring a code
        generated by your smartphone in addition to your password. This is
        relevant only if you log in with an email and password. It is not
        relevant for 3rd-party logins.
      </p>
      <div className="form__group right ma-bt-md">
        {user.twoFactorEnabled ? (
          <button
            type="button"
            className={`btn btn--large btn--red ${
              disable2FALoading && "btn--loading"
            }`}
            onClick={() => disable2FA()}
          >
            Disable two factor
          </button>
        ) : (
          <button
            type="button"
            className={`btn btn--large btn--green ${
              enable2FALoading && "btn--loading"
            }`}
            onClick={() => enable2FA()}
          >
            Setup two factor
          </button>
        )}
      </div>

      <p className="title__description ma-t-lg">
        * User need both email and phone to be verified to setup 2FA
      </p>
    </InnerContainer>
  );
}
